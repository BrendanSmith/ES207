read.csv("plasPCObs2014.csv")
data<-read.csv("plasPCObs2014.csv")
View(data)
summary(data)
data2<-read.csv("plasSampleUnits2014.csv")
summary(data1)
summary(data2)
View(data2)
View(data2)
View(data)
data1<-read.csv("plasPCObs2014.csv")
summary(data1)
?boxplot
boxplot(ScientificName,data=data1)
boxplot('ScientificName',data='data1')
boxplot(data1$ScientificName)
boxplot(as.char(data1$ScientificName)
)
boxplot(as.character(data1$ScientificName))
boxplot(data1)
boxplot(data1$ScientificName)
data1$ScientificName
count(data1$ScientificName)
library(plyr)
count(data1$ScientificName)
plot(count(data1$ScientificName))
cntsp = count(data1$ScientificName)
cntsp
?sort
cntsp <- sort(cntsp)
sort(cntsp)
sort(cntsp$x)
sort(cntsp$freg)
sort(cntsp$freq)
sort(cntsp$freq,decreasing=TRUE)
cntsp[sort(cntsp$freq,decreasing=TRUE)]
cntsp[,sort(cntsp$freq,decreasing=TRUE)]
cntsp <- cntsp[order(-freq),]
cntsp <- cntsp[order(-cntsp$freq),]
cntsp
?hist
hist(cntsp)
hist(cntsp$freq)
xlabel
?hist
hist(cntsp$freq,labels = cntsp$x)
hist(cntsp$x)
cntsp
hist(data1$ScientificName)
plot(cntsp)
boxplot(cntsp)
boxplot(cntsp$freq)
boxplot(cntsp$freq~cntsp$x)
cntsp[,1]
cntsp[,1]
cntsp[11]
cntsp[1,]
cntsp[1:2,]
cntsp[1:5,]
plot(cntsp[1:5,])
boxplot(cntsp[1:5,])
boxplot(data1$SpeciesName)
boxplot(data1$SpeciesName)
plot(data1$SpeciesName)
packages(plyr)
data1<-read.csv("plasPCObs2014.csv")
library(plyr)
data1<-read.csv("plasPCObs2014.csv")
plot(data1$SpeciesName)
data2<-read.csv("plasSampleUnits2014.csv")
summary(data2)
boxplot(data1$ScientificName)
plot(data1$ScientificName)
data1[which(data1$ScientificName==cntsp$x[1:5,])]
cntsp$x[1:5,]
cntsp[1:5,]
cntsp$x[1:5]
cntsp$x[,1:5]
cntsp$x[1]
cntsp$x(1)
cntsp$x
cntsp$x[1:2]
cntsp$x[1:]
cntsp$x[1:3]
data1[which(data1$ScientificName==cntsp$x[1:5])]
data1[which(data1$ScientificName==cntsp$x[1:5]),]
test <-data1[which(data1$ScientificName==cntsp$x[1:5]),]
plot(test$ScientificName)
data1[which(data1$ScientificName==cntsp$x[1:5]),]
cntsp$x[1:5]
View(test)
plot(test$ScientificName)
levels(test)
droplevels(test[which(test$SpeciesName!=test$SpeciesName)])
plot(test$SpecieName)
plot(test$SpeciesName)
plot(test$ScientificName)
droplevels(test[which(test$ScientificName!=test$ScientificName)])
test$ScientificName
droplevels(test$ScientificName)
plot(test$ScientificName)
test$ScientificName
droplevels(test$ScientificName)
droplevels(test$ScientificName)
test = droplevels(test$ScientificName)
plot(test$ScientificName)
test
tpspecies <- data1[which(data1$ScientificName==cntsp$x[1:5]),]
test <-data1[which(data1$ScientificName==cntsp$x[1:5]),]
test
test <-data1[which(data1$ScientificName==cntsp$x[1:5]),]
test
test$ScientificName
droplevels(test$ScientificName)
droplevels(test$ScientificName)$ScientificName
droplevels(test)$ScientificName
factor(test)
factor(test$ScientificName)
levels(droplevels(test$ScientificName))
test$ScientificName = droplevels(test$ScientificName)
tpspecies <- data1[which(data1$ScientificName==cntsp$x[1:5]),]
tpspecies$ScientificName = droplevels(tpscpecies$ScientificName)
tpspecies$ScientificName = droplevels(tpspecies$ScientificName)
plot(tpscp)
plot(tpspecies)
plot(tpspecies$ScientificName)
boxplot(tpspecies$ScientificName)
hist(tpspecies$ScientificName)
plot(tpspecies$ScientificName,xlab = 'species')
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency')
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequenc')
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency')
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency',ylim = 1000)
?plot
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency',ylim = 1000,main = 'Top 5 Species')
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency',main = 'Top 5 Species')
cntsp
count(tpspecies$ScientificName)
count(data1$ScientificName)
data1<-read.csv("plasPCObs2014.csv")
summary(data1)
data2<-read.csv("plasSampleUnits2014.csv")
summary(data2)
# Transect in data1 corresponds to short.Name in data2
# data2 contains lon-lat information
# need to combine lon-lat information from data2 into data1
cntsp = count(data1$ScientificName)
cntsp <- cntsp[order(-cntsp$freq),]
# The 3 most elusive species are the Sialia, Strix occidentalis, Thryomanes bewickii
plot(data1$ScientificName)
# subset top 5 species
tpspecies <- data1[which(data1$ScientificName==cntsp$x[1:5]),]
count(data1$ScientificName)
cntsp
test$ScientificName = cntsp$x[1:5,]
test$ScientificName = cntsp$x[1:5]
test$ScientificName <- cntsp$x[1:5]
test <- cntsp$x[1:5]
test
droplevels(test)
rm(test)
test$ScientificName <- cntsp$x[1:5]
test <- cntsp
rm(test)
test = data1
test$ScientificName <- cntsp$x[1:5]
test<-test[cntsp$c[1:5],]
test
test = data1
test
t <-which(test$ScientificName!=cntsp$x[1:5])
t
test<-test[-t,]
test
plot(test$ScientificName)
plot(droplevels(test$ScientificName)
)
tpspecies <- data1[which(data1$ScientificName==cntsp$x[1:5]),]
tpspecies$ScientificName = droplevels(tpspecies$ScientificName)
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency',main = 'Top 5 Species')
lm(cientificName~Detection.Cue,data=tpscpecies)
lm(cientificName~Detection.Cue,data=tpspecies)
lm(ScientificName~Detection.Cue,data=tpspecies)
sp.det <- lm(ScientificName~Detection.Cue,data=tpspecies)
plot(sp.det)
sp.det <- lm(ScientificName~Distance.Bin.ID,data=tpspecies)
sp.det <- lm(tpspecies$ScientificName~tpspecies$Distance.Bin.ID)
tpspecies$Distance.Bin
sp.det <- lm(tpspecies$ScientificName~tpspecies$Distance.Bin)
sp.det <- lm(tpspecies$ScientificName~as.numeric(tpspecies$Distance.Bin))
as.numeric(tpspecies$Distance.Bin)
tpspecies$ScientificName~as.numeric(tpspecies$Distance.Bin)
plot(tpspecies$ScientificName~as.numeric(tpspecies$Distance.Bin))
plot(as.numeric(tpspecies$Distance.Bin)~tpspecies$ScientificName)
plot(as.numeric(tpspecies$Distance.Bin)~tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot(as.numeric(tpspecies$Distance.Bin),tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot(tpspecies$ScientificName,as.numeric(tpspecies$Distance.Bin),ylab = 'Distance Observed (m)',xlab = 'Species')
plot(tpspecies$ScientificName,as.numeric(tpspecies$Observ.Time),ylab = 'Distance Observed (m)',xlab = 'Species')
as.numeric(tpspecies$Observ.Time)
(tpspecies$Observ.Time)
plot(tpspecies$ScientificName,(tpspecies$Observ.Time),ylab = 'Distance Observed (m)',xlab = 'Species')
plot(tpspecies$ScientificName~(tpspecies$Observ.Time),ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Observ.Time),tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Observ.Time)~tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Detection.Cue)~tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Detection.Cue),tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Detection.Cue)~tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Detection.Cue)~tpspecies$ScientificName,ylab = 'Detection Cue',xlab = 'Species')
test
test <- droplevels(test)
test
tpspecies <- data1[which(data1$ScientificName==cntsp$x[1:5]),]
tpspecies = droplevels(tpspecies)
plot(tpspecies$ScientificName,xlab = 'Species',ylab = 'Frequency',main = 'Top 5 Species')
# Plot the observed distance as a function of Scientific Name
plot(as.numeric(tpspecies$Distance.Bin)~tpspecies$ScientificName,ylab = 'Distance Observed (m)',xlab = 'Species')
plot((tpspecies$Detection.Cue)~tpspecies$ScientificName,ylab = 'Detection Cue',xlab = 'Species')
plot((tpspecies$Detection.Cue),tpspecies$ScientificName,ylab = 'Detection Cue',xlab = 'Species')
plot(tpspecies$Detection.Cue)
plot(tpspecies$Detection.Cue,ylab = 'Frequency',xlab = 'Detection Cue')
library(plyr)
library(rgdal)
library(HH)
library(reshape2)
library(stats)
library(raster)
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem)
points(data2$Longitude,data2$Latitude)
t.test(tpspecies$ScientificName)
t.test(tpspecies$Distance.Bin, tpspecies$ScientificName)
t.test(tpspecies$Distance.Bin~tpspecies$ScientificName)
t.test(as.numeric(tpspecies$Distance.Bin),tpspecies$ScientificName)
t.test(as.numeric(tpspecies$Distance.Bin)~tpspecies$ScientificName)
points(data2$Longitude,data2$Latitude)
xy = cbind(data2$Longitude,data2$Latitude)
# extract the values from the dem dataset
evals = extract(dem,xy)
data2$Elevation <- evals
summary(data2$Name)
?extract
summary(data1$Transect)
summary(data1$Point)
summary(data2$Short.Name)
data1[which(data1$Point==data2$Short.Name,]
data1[which(data1$Point==data2$Short.Name),]
match(data1$Point,data2$Short.Name)
data1[match(data1$Point,data2$Short.Name)]
data1[match(data1$Point,data2$Short.Name),]
test <- data1[match(data1$Point,data2$Short.Name),]
test<-droplevels(test)
match(test$Point,data2$Short.Name)
test <- data1[match(data1$Point,data2$Short.Name),]
test$Latitude <- data2$Latitude[match(data1$Point,data2$Short.Name),]
test$Latitude <- data2$Latitude[match(data1$Point,data2$Short.Name)]
test$Longitude <- data2$Latitude[match(data1$Point,data2$Short.Name)]
test$Longitude <- data2$Longitude[match(data1$Point,data2$Short.Name)]
test$Elevation <- data2$Elevation[match(data1$Point,data2$Short.Name)]
plot(test$ScientificName,test$Elevation)
test<-droplevels(test)
plot(test$ScientificName,test$Elevation)
tpspecies <- tpspecies[match(tpspecies$Point,data2$Short.Name),]
tpspecies$Latitude <- data2$Latitude[match(tpspecies$Point,data2$Short.Name)]
tpspecies$Longitude <- data2$Longitude[match(tpspecies$Point,data2$Short.Name)]
tpspecies$Elevation <- data2$Elevation[match(tpspecies$Pointt,data2$Short.Name)]
tpspecies$Elevation <- data2$Elevation[match(tpspecies$Point,data2$Short.Name)]
plot(tpspecies$ScientificName,tpspecies$Elevation)
tpspecies<-droplevels(tpspecies)
plot(tpspecies$ScientificName,tpspecies$Elevation)
plot(tpspecies$ScientificName,tpspecies$Elevation, ylab = 'Elevation (m AMSL)',xlab = 'Species')
lm(ScientificName~Elevation,data=test)
plot(lm(ScientificName~Elevation,data=test))
plot(ScientificName~Elevation,data=test)
t.test(tpspecies$Elevation~tpspecies$ScientificName)
t.test(tpspecies$Elevation,tpspecies$ScientificName)
t.test(tpspecies$Elevation,mu=3)
plot(t.test(tpspecies$Elevation,mu=3))
hist(tpspecies$Elevation)
hist(tpspecies$Elevation,xlab='Elevation')
hist(tpspecies$Elevation,xlab='Elevation',main = 'Histogram of Top Species Elevation')
hist(data1$Elevation,xlab='Elevation',main = 'Histogram of Top Species Elevation')
hist(tpspecies$Elevation,xlab='Elevation',main = 'Histogram of Top Species Elevation')
lm(as.numeric(tpspecies$Distance.Bin)~tpspecies$Elevation)
plot(lm(as.numeric(tpspecies$Distance.Bin)~tpspecies$Elevation))
plot(as.numeric(tpspecies$Distance.Bin)~tpspecies$Elevation)
plot(as.numeric(tpspecies$Distance.Bin),tpspecies$Elevation)
plot(as.numeric(tpspecies$Distance.Bin),tpspecies$Elevation,ylab='Elevation (m)',xlab='Distance Observed (m)')
summary(lm(as.numeric(tpspecies$Distance.Bin)~tpspecies$Elevation))
