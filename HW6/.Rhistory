install.packages("foreign")
library(foreign)
read.dbf("Sierra_Nevada_MultiSource_Meadow_Polygons_Compilation_v1.dbf")
HGM<-read.dbf("Sierra_Nevada_MultiSource_Meadow_Polygons_Compilation_v1.dbf")
mdws<-read.dbf("Sierra_Nevada_MultiSource_Meadow_Polygons_Compilation_v1.dbf")
View(mdws)
mdwhgm<-mdws[!is.na(mdws[,"HGM_TYPE"]),]
mdwhgm
View(mgwghm)
View(mdwghm)
?is
??is.na
?is.na
mdwhgm$area.sqkm = mdwhgm[,"Shape_Area"]/1000000 # m^2 to km^2
mdwhgm$catch.sqkm = mdwhgm[,"CATCHMENT_"]/1000000# m^2 to km^2
mdwhgm$elev_m = mdwhgm[,"ELEV_MEAN"]
mdwhgm$elev_r = mdwhgm[,"ELEV_RANGE"]
mdwhgm$lat_dd = mdwhgm[,"LAT_DD"]
mdwhgm$lon_dd = mdwhgm[,"LONG_DD"]
mdwhgm$slope.pct = mdwhgm[,"FLOW_SLOPE"]
mdwhgm$edge.comp = mdwhgm[,"EDGE_COMPL"]
mdwhgm$clay = mdwhgm[,"ClayTot_r"]
mdwhgm$soil.kf = mdwhgm[,"Kf"]
View(mdwhgm)
summary(mdwhgm)
plot(mdwhgm)
plot(HGM_TYPE~area.sqkm,data=mdwhgm)
plot(HGM_TYPE~SHAPE_Area,data=mdwhgm)
plot(HGM_TYPE~Shape_Area,data=mdwhgm)
plot(HGM_TYPE~catch.sqkm,data=mdwhgm)
plot(HGM_TYPE~slope.pct,data=mdwhgm)
lm1<-lm(HGM_TYPE~slope.pct,data=mdwhgm)
plot(lm1)
lm1<-lm(HGM_TYPE~soil.kf,data=mdwhgm)
plot(lm1)
hist(mdwhgm$HGM_TYPE)
frequency(mdwhgm$HGM_TYPE)
summary(mdwhgm)
boxplot(HGM_TYPE,catch.sqkm,data=mdwhgm)
boxplot(mdwhgm,data=mdwhgm)
boxplot(mdwhgm)
rel_cols = c("area.sqkm", "catch.sqkm", "elev_m", "elev_r", "lat_dd", "lon_dd", "slope.pct", "edge.comp", "clay", "soil.kf")
mdwhgm[rel_cols,]
mdwhgm[,rel_cols]
rel_cols = c("HGM_TYPE","area.sqkm", "catch.sqkm", "elev_m", "elev_r", "lat_dd", "lon_dd", "slope.pct", "edge.comp", "clay", "soil.kf")
rel_cols = c("HGM_TYPE","area.sqkm", "catch.sqkm", "elev_m", "elev_r", "lat_dd", "lon_dd", "slope.pct", "edge.comp", "clay", "soil.kf")
mdwhgm[,rel_cols]
rmdwhgm <-mdwhgm[,rel_cols]
plot(rmdhgm)
plot(rmdwhgm)
rel_cols = c("area.sqkm", "catch.sqkm", "elev_m", "elev_r", "lat_dd", "lon_dd", "slope.pct", "edge.comp", "clay", "soil.kf")
rmdwhgm <-mdwhgm[,rel_cols]
```
```{r, fig.width=9, fig.height=9}
plot(rmdwhgm)
?pairs
pairs(rmdwhgm)
hclust
kmeans
hclust(rmdwhgm)
hclust(rmdwhgm$area.sqkm)
#dist using euclidean
rmdwhgm.dist<- dist(x = rmdwhgm[,rel_cols],method = "euclidean") #hclust using ward.D
rmdwhgm.hc<- hclust(rmdwhgm.dist,method="ward.D")
plot(rmdwhgm.hc)
?rect.hclust
rect.hclust(rmdwhgm.hc,k=6)
rmdwhgm$hc6 <- cutree(mdwhgm.hc, k=6) #store group # in hc6
rmdwhgm$hc6 <- cutree(rmdwhgm.hc, k=6) #store group # in hc6
rmdwhgm$hc6 <- cutree(rmdwhgm.hc, k=6) #store group # in hc6
rmdwhgm.km6 <- kmeans(rmdwhgm[,rel_cols],centers = 6)
rmdwhgm$km6 <- rmdwhgm.km6$cluster #store group # in km6
table(rmdwhgm$hc6, rmdwhgm$km6)
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd)
#text(xtext,ytext,labels=ProjLoc$ProjCode)
gdal_grid = readGDAL("DEM.tif")
library(raster)
library(rgdal)
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd)
#text(xtext,ytext,labels=ProjLoc$ProjCode)
plot(dem,col=gray.colors(10, start=0.9, end=0.3)
)
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem,col=gray.colors(10, start=0.9, end=0.3))
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd)
#text(xtext,ytext,labels=ProjLoc$ProjCode)
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,col=gray.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,col=gray.colors(5, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,col=gray.colors(10, start=10, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,col=mc.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,col=red.colors(10, start=0.9, end=0.3))
?points
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=grey.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=blue.colors(10, start=0.9, end=0.3))
?col
?gray.colors
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=heat.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rgb.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=heat.colors)
grey
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=gray.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=blues9)
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem,col=gray.colors(10, start=0.9, end=0.3))
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=blues9)
#text(xtext,ytext,labels=ProjLoc$ProjCode)
?points
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=gray.colors(10, rmdwhgm$hc6))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=blues.colors(10, rmdwhgm$hc6))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=grey.colors(10, rmdwhgm$hc6))
rmdwhgm$hc6
?grey.colors
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rainbow.colors( rmdwhgm$hc6,alpha=1))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=heat.colors( rmdwhgm$hc6,alpha=1))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=heat.colors( rmdwhgm$hc6))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rainbow( rmdwhgm$hc6,alpha=1))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$hc6)
qplot(dem,col=gray.colors(10, start=0.9, end=0.3))
gplot(dem,col=gray.colors(10, start=0.9, end=0.3))
ggplot(dem,col=gray.colors(10, start=0.9, end=0.3))
plot(dem,col=gray.colors(10, start=0.9, end=0.3))
library(ggplot2)
qplot(x, y, data=dat, colour=col) + scale_colour_gradient(low="red", high="blue")
qplot(dem,col=gray.colors(10, start=0.9, end=0.3))
qplot(dem)#,col=gray.colors(10, start=0.9, end=0.3))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$hc6)
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem,col=gray.colors(10, start=0.9, end=0.3))
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$hc6)
#text(xtext,ytext,labels=ProjLoc$ProjCode)
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=blues(rmdwhgm$hc6))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=blues.colors(rmdwhgm$hc6))
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$hc6)
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$km6)
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$hc6)
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$km6)
legend(col=rmdwhgm$km6)
legend(xtext,ytext,col=rmdwhgm$km6)
rgb(225,64,5, 50, maxColorValue=255)),pch=19)
legend("topright", c("Shuffled", "Riffled", "Somosome"), cex=1.0,bty="n",col=c("black",rgb(96,123,139, 50, maxColorValue=255),rgb(225,64,5, 50, maxColorValue=255)),pch=19)
legend("topright", rmdwhgm$km6, cex=1.0,bty="n",col=rmdwhgm$km6,pch=19)
legend("topright", rmdwhgm$km6, cex=1.0,bty="n",col=rmdwhgm$km6,rgb(225,64,5, 50, maxColorValue=255)),pch=19)
legend("topright", rmdwhgm$km6, cex=1.0,bty="n",col=rmdwhgm$km6,pch=19)
?legend
legend(7,4.3,unique(rmdwhgm$km6),col=1:length(rmdwhgm$km6),pch=19)
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$km6)
legend(7,4.3,unique(rmdwhgm$km6),col=1:length(rmdwhgm$km6),pch=19)
plot(dem,col=gray.colors(10, start=0.9, end=0.3))
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$km6)
legend(7,4.3,unique(rmdwhgm$km6),col=1:length(rmdwhgm$km6),pch=19)
legend("topright",unique(rmdwhgm$km6),col=1:length(rmdwhgm$km6),pch=19)
legend("topright",7,4.3,unique(rmdwhgm$km6),col=1:length(rmdwhgm$km6),pch=19)
legend("topright",legend=levels(rmdwhgm$km6),col=1:length(rmdwhgm$km6),pch=19)
levels(rmdwhgm$km6)
levels(as.factor(rmdwhgm$km6))
legend("topright",legend=levels(as.factor(rmdwhgm$km6)),col=1:length(rmdwhgm$km6),pch=19)
# Heirarchical Clustering
#dist using euclidean
rmdwhgm.dist<- dist(x = rmdwhgm[,rel_cols],method = "euclidean") #hclust using ward.D
rmdwhgm.hc<- hclust(rmdwhgm.dist,method="ward.D")
rect.hclust(rmdwhgm.hc,k=6)
```
```{r}
# k-means Clustering
rmdwhgm$hc6 <- cutree(rmdwhgm.hc, k=6) #store group # in hc6
rmdwhgm.km6 <- kmeans(rmdwhgm[,rel_cols],centers = 6)
rmdwhgm$km6 <- rmdwhgm.km6$cluster #store group # in km6
table(rmdwhgm$hc6, rmdwhgm$km6)
```
```{r, fig.width=9, fig.height=9}
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem,col=gray.colors(10, start=0.9, end=0.3))
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = rmdwhgm$lon_dd
ytext = rmdwhgm$lat_dd
# Plot the ProjLoc over the DEM
points(rmdwhgm$lon_dd,rmdwhgm$lat_dd,pch=19,col=rmdwhgm$hc6)
legend("topright",legend=levels(as.factor(rmdwhgm$hc6)),col=1:length(rmdwhgm$hc6),pch=19)
```
levels(as.factor(rmdwhgm$hc6))
?hclust
plot.new()
plot.new(rmdwhgm)
plot.new()
plot(rmdwhgm)
?plot.new
frame()
plot(rmdwhgm)
frame()
```{r}
