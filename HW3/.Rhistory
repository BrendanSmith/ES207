abline(ripdata$Woody_DBH_cm,ripdata$htcm,col = "yellow")
abline(riplm)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey")
abline(riplms,col = "yellow")
abline(riplm,col = "yellow")
abline(reg = 1,riplm,col = "yellow")
abline(riplm,col = "yellow",reg=1)
library(car)
outlierTest(riplm)
?"table"
?table
ripolt <- table(outlierTest(riplm))
ripolt <- outlierTest(riplm)
ripolt
?outlierTest
labels.ripolt
ripolt$signif
ripolt$rstudent
ripolt$p
levels(ripolt)
levels(ripolt$rstudent)
ripolt$cutoff
ripolt$bonf.p
ripolt$rstudent
boxplot(ripdata$Genus,ripdata$Woody_DBH_cm)
ripdata$Genus
levels(ripdata$Genus)
plot(levels(ripdata$Genus),ripdata$Woody_DBH_cm)
View(ripdata)
boxplot(ripdata$Genus,ripdata$Woody_DBH_cm)
plot(ripdata$Genus,ripdata$Woody_DBH_cm)
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_DBH_cm)
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_Height_m)
plot(ripdata$ProjCode,ripdata$Woody_Height_m)
plot(ripdata$Genus,ripdata$Woody_Height_m)
plot(ripdata$Genus,ripdata$Woody_Height_m)
plot(ripdata$ProjCode,ripdata$Woody_Height_m)
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_Height_m)
plot(riplm)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey")
abline(riplm,col = "yellow")
ripolt <- outlierTest(riplm)
ripolt
summary(ripdata$htcm)
summary(ripdata$Woody_DBH_cm)
hist(ripdata$htcm)
hist(log(ripdata$htcm)
hist(log(ripdata$htcm))
hist(ripdata$htcm)
ripdatasub<-subset(ripdata,Woody<4000)
ripdatasub<-subset(ripdata,Woody_DBH_cm<4000)
hist(ripdatasub$htcm)
ripdatasub<-subset(ripdata,Woody_DBH_cm<3000)
hist(ripdatasub$htcm)
ripdatasub<-subset(ripdata,Woody_DBH_cm<2000)
hist(ripdatasub$htcm)
ripdatasub<-subset(ripdata,Woody_DBH_cm<1000)
hist(ripdatasub$htcm)
ripdatasub<-subset(ripdata,Woody_DBH_cm<1000)
hist(ripdatasub$htcm)
ripdatasub<-subset(ripdata,Woody_DBH_cm<10)
hist(ripdatasub$htcm)
ripdatasub<-subset(ripdata,Woody_DBH_cm<4000)
hist(ripdatasub$htcm)
outlierTest(ripdatasub$htcm)
outlierTest(ripdatasub)
riplms <- lm(ripdatasub$htcm~ripdatasub$Woody_DBH_cm)
outlierTest(riplms)
plot(riplms)
summary(ripdatasub$htcm)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey")
abline(riplm,col = "yellow")
ripdatasub <- ripdata[ripdata$Woody_Height_m < 10000,]
ripdatasub <- ripdata[ripdata$htcm < 10000,]
summary(ripdatasub$htcm)
plot(ripdatasub$Woody_DBH_cm,ripdatasub$htcm,col = "grey")
abline(riplm,col = "yellow")
ripdatasub <- ripdata[ripdata$htcm < 5700,]
plot(ripdatasub$Woody_DBH_cm,ripdatasub$htcm,col = "grey")
abline(riplm,col = "yellow")
summary(ripdatasub$htcm)
ripdatasub <- ripdata[ripdata$htcm < 5000,]
summary(ripdatasub$htcm)
plot(ripdatasub$Woody_DBH_cm,ripdatasub$htcm,col = "grey")
abline(riplm,col = "yellow")
library(car)
ripolt <- outlierTest(riplm)
ripolt.ids <- as.integer(names(ripolt$rstudent))
#Create the for loop for us to iterate through the OutlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$[r], col="red",pch=19)
}
library(car)
ripolt <- outlierTest(riplm)
ripolt.ids <- as.integer(names(ripolt$rstudent))
#Create the for loop for us to iterate through the OutlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19)
}
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
plot(ripdata$Genus,ripdata$Woody_Height_m,xlab="Genus",ylab="ht in cm")
plot(ripdata$ProjCode,ripdata$Woody_Height_m,xlab="Project Code",ylab="ht in cm")
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_Height_m,xlab="Interaction of ProjCode and Genus",ylab="ht in cm")
plot(ripdata$Genus,ripdata$Woody_DBH_cm,xlab="Genus",ylab="dbh in cm")
plot(ripdata$ProjCode,ripdata$Woody_DBH_cm,xlab="Project Code",ylab="dbh in cm")
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_DBH_cm,xlab="Interaction of ProjCode and Genus",ylab="dbh in cm")
ripdata$htcm <- ripdata$Woody_Height_m * 100
riplm <- lm(ripdata$htcm ~ ripdata$Woody_DBH_cm)
summary(riplm)
plot(riplm)
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
ripdatass[-which(ripdata$Woody_DBH_cm[1])]
ripdata[-which(ripdata$Woody_DBH_cm[1])]
ripdata[-r]
View(ripdata)
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
ripdata[-r,] #plot each outlier point individually
}
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
ripdata <- read.csv("./newripdata_survey.csv",sep = ",",header = TRUE)
#attach(ripdata)
str(ripdata)
head(ripdata)
tail(ripdata)
ripdata$htcm <- ripdata$Woody_Height_m * 100
riplm <- lm(ripdata$htcm ~ ripdata$Woody_DBH_cm)
summary(riplm)
plot(riplm)
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
ripdata[-r,] #plot each outlier point individually
}
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
ripdata[-(r),] #plot each outlier point individually
}
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
ripolt.ids
ripdata[-ripolt.ids,]
ripss <-ripdata[-ripolt.ids,]
plot(ripss$Woody_DBH_cm,ripss$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
ripss <-ripdata[-ripolt.ids,]
ripsslm <- lm(ripss$htcm ~ ripss$Woody_DBH_cm)
summary(riplm)
plot(ripss$Woody_DBH_cm,ripss$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
?outlierTest
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = .5)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
source('~/.active-rstudio-document', echo=TRUE)
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = .5)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 1)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 2)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 10)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 20)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 1000)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 1)
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
ripss <-ripdata[-ripolt.ids,]
ripsslm <- lm(ripss$htcm ~ ripss$Woody_DBH_cm)
summary(riplm)
plot(ripss$Woody_DBH_cm,ripss$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
?outlierTest
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = .001) #we can use the "cutoff" parameter
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = .0001) #we can use the "cutoff" parameter
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = .01) #we can use the "cutoff" parameter
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = .1) #we can use the "cutoff" parameter
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 2) #we can use the "cutoff" parameter
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
ripss <-ripdata[-ripolt.ids,]
ripsslm <- lm(ripss$htcm ~ ripss$Woody_DBH_cm)
summary(riplm)
plot(ripss$Woody_DBH_cm,ripss$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
?outlierTest
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = Inf) #We can use the "cutoff" parameter to identify observations with p-values exceeding this value, mea
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
#Load the "car" library so we can use "outlierTest()"
library(car)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 2) #We can use the "cutoff" parameter to identify observations with p-values exceeding this value
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
ripss <-ripdata[-ripolt.ids,]
ripsslm <- lm(ripss$htcm ~ ripss$Woody_DBH_cm)
summary(riplm)
plot(ripss$Woody_DBH_cm,ripss$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
ripss <-ripdata[-ripolt.ids,]
ripsslm <- lm(ripss$htcm ~ ripss$Woody_DBH_cm)
summary(riplm)
plot(riplm)
ripss <-ripdata[-ripolt.ids,]
ripsslm <- lm(ripss$htcm ~ ripss$Woody_DBH_cm)
summary(riplm)
plot(riplm)
plot(riplm)
summary(ripss$Woody_DBH_cm)
summary(ripss$htcm)
plot(ripss$Woody_DBH_cm))
plot(ripss$Woody_DBH_cm)
plot(freq(ripss$Woody_DBH_cm)
plot(freq(ripss$Woody_DBH_cm))
plot(count(ripss$Woody_DBH_cm))
library(plyr)
plot(count(ripss$Woody_DBH_cm))
plot(log(count(ripss$Woody_DBH_cm)))
plot(sqrt(count(ripss$Woody_DBH_cm)))
plot(log(count(ripss$Woody_DBH_cm)))
plot((count(ripss$Woody_DBH_cm)))
plot(exp(count(ripss$Woody_DBH_cm)))
plot(log(count(ripss$Woody_DBH_cm)))
levels(ripss$Genus)
ripss[ripss$Genus=="Acer"]
ripss[ripss$Genus=="Acer",]
Acerdf <- ripss[ripss$Genus=="Acer",]
ripss[ripss$Genus=="Acer",]
levels(ripss$Genus)
levels(ripss$ProjCode)
Acerdf <- ripss[ripss$Genus=="Acer",]
Fraxdf <- ripss[ripss$Genus=="Fraxinus",]
Popdf <- ripss[ripss$Genus=="Populus",]
Quedf <- ripss[ripss$Genus=="Quercus",]
Saldf <- ripss[ripss$Genus=="Salix",]
CORSPdf <- ripss[ripss$ProjCode=="CORSP",]
HEROWdf <- ripss[ripss$ProjCode=="HEROW",]
NAPSOdf <- ripss[ripss$ProjCode=="NAPSO",]
SACTOdf <- ripss[ripss$ProjCode=="SACTO",]
ripsslog <-ripss
ripsslog$htcmlog <- log(ripsslog$htcm)
ripsslog$dbhlog <- log(ripsslog$Woody_DBH_cm)
Acerdf <- ripss[ripss$Genus=="Acer",]
Fraxdf <- ripss[ripss$Genus=="Fraxinus",]
Popdf <- ripss[ripss$Genus=="Populus",]
Quedf <- ripss[ripss$Genus=="Quercus",]
Saldf <- ripss[ripss$Genus=="Salix",]
CORSPdf <- ripss[ripss$ProjCode=="CORSP",]
HEROWdf <- ripss[ripss$ProjCode=="HEROW",]
NAPSOdf <- ripss[ripss$ProjCode=="NAPSO",]
SACTOdf <- ripss[ripss$ProjCode=="SACTO",]
ripsslog <-ripss
ripsslog$htcmlog <- log(ripsslog$htcm)
ripsslog$dbhlog <- log(ripsslog$Woody_DBH_cm)
Acerdf <- ripsslog[ripsslog$Genus=="Acer",]
Fraxdf <- ripsslog[ripsslog$Genus=="Fraxinus",]
Popdf <- ripsslog[ripsslog$Genus=="Populus",]
Quedf <- ripsslog[ripsslog$Genus=="Quercus",]
Saldf <- ripsslog[ripsslog$Genus=="Salix",]
CORSPdf <- ripsslog[ripsslog$ProjCode=="CORSP",]
HEROWdf <- ripsslog[ripsslog$ProjCode=="HEROW",]
NAPSOdf <- ripsslog[ripsslog$ProjCode=="NAPSO",]
SACTOdf <- ripsslog[ripsslog$ProjCode=="SACTO",]
plot(Acerdf$dbhlog,Acerdf$htcmlog)
plot(ripsslog$dbhlog,ripsslog$htcmlog)
rsloglm <- lm(ripsslog$htcm~ripsslog$dbhlog)
plot(ripsslog$dbhlog,ripsslog$htcmlog,col = "grey")
abline(rsloglm,col = "yellow")
rsloglm <- lm(ripsslog$dbhlog~ripsslog$htcm)
abline(rsloglm,col = "yellow")
abline(rsloglm,col = "yellow")
abline
abline(rsloglm,col = "yellow")
rsloglm <- lm(ripsslog$dbhlog~ripsslog$htcm)
plot(ripsslog$dbhlog,ripsslog$htcmlog,col = "grey")
abline(rsloglm,col = "yellow")
rsloglm <- lm(ripsslog$htcm~ripsslog$dbhlog)
plot(ripsslog$dbhlog,ripsslog$htcmlog,col = "grey")
abline(rsloglm,col = "yellow")
abline(reg = 1,rsloglm,col = "yellow")
abline(reg = 1,col = "yellow")
abline(rsloglm,col = "yellow")
plot(rsloglm)
levels(ripdata$Genus)
?outlierTest
library(car)
?outlierTest
?plot
plot(ripdata$Genus,ripdata$Woody_Height_m,xlab="Genus",ylab="ht in cm",title("Test"))
plot(ripdata$Genus,ripdata$Woody_Height_m,xlab="Genus",ylab="ht in cm",sub ="Test"))
plot(ripdata$Genus,ripdata$Woody_Height_m,xlab="Genus",ylab="ht in cm",sub ="Test")
title("Test")
plot(ripdata$Genus,ripdata$Woody_Height_m,xlab="Genus",ylab="ht in cm")
plot(ripdata$Genus,ripdata$Woody_Height_m,xlab="Genus",ylab="ht in cm")
title("Box Plot: height distribution ~ Project Code")
plot(ripdata$ProjCode,ripdata$Woody_Height_m,xlab="Project Code",ylab="ht in cm")
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_Height_m,xlab="Interaction of ProjCode and Genus",ylab="ht in m")
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_Height_m,xlab="Interaction of ProjCode and Genus",ylab="ht in m",las=3)
title("Box Plot: height distribution ~ Genus & Project Code")
",ylab="ht in m",las=3)
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_Height_m,xlab="",ylab="ht in m",las=3)
title("Box Plot: height distribution ~ Genus & Project Code")
plot(ripdata$Genus,ripdata$Woody_DBH_cm,xlab="Genus",ylab="dbh in cm")
plot(ripdata$ProjCode,ripdata$Woody_DBH_cm,xlab="Project Code",ylab="dbh in cm")
plot(ripdata$ProjCode:ripdata$Genus,ripdata$Woody_DBH_cm,xlab="",ylab="dbh in cm",las=3)
summary(riplm)
sqrt(0.4749)
plot(riplm)
plot(riplm)
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
plot(ripdata$Woody_DBH_cm,ripdata$htcm,col = "grey",xlab="dbh in cm",ylab="ht in cm")
abline(riplm,col = "yellow")
#Load the "car" library so we can use "outlierTest()"
library(car)
#Perform the "outlierTest()" function on the riparian data linear model assembled earlier
ripolt <- outlierTest(riplm,cutoff = 2) #We can use the "cutoff" parameter to identify observations with p-values exceeding this value
ripolt.ids <- as.integer(names(ripolt$rstudent)) #typecast the indeces to outlier data poitns as integers
#Create the for loop for us to iterate through the outlierTest results and plot these points on our scatterplot
for (i in 1:length(ripolt.ids)){
r<-ripolt.ids[i]
points(ripdata$Woody_DBH_cm[r], ripdata$htcm[r], col="red",pch=19) #plot each outlier point individually
}
summary(riplm)
summary(ripss$Woody_DBH_cm)
#Perform EDA on linear model
summary(riplm)
summary(ripss$Woody_DBH_cm)
summary(ripss$htcm)
summary(ripdata$htcm)
summary(rsloglm)
C
SACTOr2 <- summary(SACTOlm)$r.squared
SACTOlm <- lm(SACTOdf$htcm ~ SACTOdf$dbhlog)
SACTOr2 <- summary(SACTOlm)$r.squared
