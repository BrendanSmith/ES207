rip$htcm <- rip$Woody_Height_m*100
ProjLoc <- aggregate(cbind(Longitude,Latitude) ~ ProjCode,data=rip, mean)
```
We use the following two commands to read the data from `*.tif` files and then store the data as a projected raster:
```{r}
# Load the DEM
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = ProjLoc$Longitude+1
ytext = ProjLoc$Latitude
ytext[1] = ytext[1]+.1
ytext[2] = ytext[2]-.2
ytext[3] = ytext[3]+.2
# Plot the ProjLoc over the DEM
points(ProjLoc$Longitude,ProjLoc$Latitude)
text(xtext,ytext,labels=ProjLoc$ProjCode)
```
```{r}
gdal_grid = readGDAL("precip_8.tif")
precip = raster(gdal_grid) #use data as a projected raster
plot(precip)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = ProjLoc$Longitude+.5
ytext = ProjLoc$Latitude
ytext[1] = ytext[1]+.1
ytext[2] = ytext[2]-.2
ytext[3] = ytext[3]+.2
# Plot the ProjLoc over the DEM
points(ProjLoc$Longitude,ProjLoc$Latitude)
text(xtext,ytext,labels=ProjLoc$ProjCode)
```
```{r}
gdal_grid = readGDAL("tmean_8.tif")
tmean = raster(gdal_grid) #use data as a projected raster
plot(tmean)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = ProjLoc$Longitude+1
ytext = ProjLoc$Latitude
ytext[1] = ytext[1]+.1
ytext[2] = ytext[2]-.2
ytext[3] = ytext[3]+.2
# Plot the ProjLoc over the DEM
points(ProjLoc$Longitude,ProjLoc$Latitude)
text(xtext,ytext,labels=ProjLoc$ProjCode)
```
```{r}
# x,y locations
xy = cbind(rip$Longitude,rip$Latitude)
# extract the values from the dem dataset
evals = extract(dem,xy)
# extract the values from the dem dataset
tvals = extract(tmean,xy)
# extract the values from the dem dataset
pvals = extract(precip,xy)
# Combine all new data into the dataframe
# must transpose vectors in order to manipulate later
rip$Elevation<- t(melt(evals,rip))
rip$Temp_aug <- t(melt(tvals,rip))
rip$Precp_aug <- t(melt(pvals,rip))
```
```{r}
# Exploratory data analysis
summary(rip$Temp_aug)
hist(rip$Temp_aug)
summary(rip$Elevation)
hist(rip$Elevation)
summary(rip$Precp_aug)
hist(rip$Precp_aug)
plot(lm(rip$Temp_aug,rip$Precp_aug))
```
rip$Elevation<- melt(evals,rip)
rip$Temp_aug <- melt(tvals,rip)
rip$Precp_aug <- melt(pvals,rip)
plot(t(rip$Elevation),t(rip$Temp_aug))
plot(t(rip$precip),t(rip$Temp_aug))
plot(t(rip$Precp_aug),t(rip$Temp_aug))
plot(t(rip$Precp_aug),t(rip$Elevation))
t = melt(evals,rip)
t(t)
rip$test <- t(t)
as.numeric(t)
as.numeric(t(t))
rip$test <- as.numeric(t(t))
rip$test <- melt(as.numeric(t(t)),rip)
test <- melt(as.numeric(t(t)),rip)
?cbind
plot(lm(t(rip$Temp_aug),t(rip$Precp_aug))
plot(lm(t(rip$Temp_aug),t(rip$Precp_aug)))
lm(t(rip$Temp_aug),t(rip$Precp_aug))
lm(evals,tvals)
plot(evals,tvals)
plot(evals,pvals)
lm.pred1 <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+rip$Temp_aug)
lm.pred1 <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+t(rip$Temp_aug))
lm.pred1 <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+tvals
lm.pred1 <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+tvals)
plot(lm.pred1)
lm.pred1 <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
plot(lm.pred1)
plot(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
plot(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
plot(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
plot(rip$htcm~rip$Woody_DBH_cm*rip$Genus,evals)
plot(rip$htcm~evals)
plot(rip$htcm,evals)
plot(rip$htcm,rip$Woody_DBH_cm)
plot(rip$htcm,rip$Woody_DBH_cm+evals)
plot(rip$htcm,rip$Woody_DBH_cm~evals)
plot(rip$htcm~rip$Woody_DBH_cm*rip$Genus,evals)
plot(rip$htcm~rip$Woody_DBH_cm*rip$Genus,evals)
lm.pred1 <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
plot(lm.pred1)
lm.predt <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+tvals)
lm.predp <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+pvals)
plot(lm.predt)
plot(lm.predp)
summary.lm(lm.prede)
summary.lm(lm.predp)
lm.predl <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+rip$Latitude)
plot(lm.predl)
summary.lm(lm.predl)
summary.lm(lm.prede)
summary.lm(lm.pred1)
summary.lm(lm.predt)
lm.base <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus)
summary(lm.base)
AIC(lm.predp)
AIC(lm.pred1)
AIC(lm.predt)
AIC(lm.predl)
?AIC
AIC(lm)
test = summar.lm(lm.predp)
test = summary.lm(lm.predp)
test
View(test)
test$r.squared
esum <- summary.lm(lm.prede)
psum <- summary.lm(lm.predp) # Best model
ysum <- summary.lm(lm.predt)
lsum <- summary.lm(lm.predl)
bsum <- summary(lm.base)
psum$r.squared
lsum$r.squared
esum$r.squared
lm.prede <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
esum <- summary.lm(lm.prede)
esum <- summary.lm(lm.prede)
esum$r.squared
ysum$r.squared
bsum$r.squared
psum$residuals
mean(psum$residuals)
psum
bsum$pval
bsum$pvals
View(psum)
psum
predict.lm(?)
?predict.lm()
predict.lm(lm.predp)
plot(predict.lm(lm.predp))
plot(predict.lm(lm.prede))
plot(predict.lm(lm.predl))
plot(predict.lm(lm.predt))
plot(predict.lm(lm.predt))
plot(predict.lm(lm.base))
predict.lm()
test <-lm(rip$htcm~rip$Genus)
plot(predict.lm(test))
plot(predict.lm(lm.base))
plot(predict.lm(lm.base),pevals)
plot(predict.lm(lm.base),pvals)
plot(pvals,predict.lm(lm.base))
plot(evals,predict.lm(lm.base))
plot(tvals,predict.lm(lm.base))
plot(lm.base,predict.lm(lm.base))
data <- read.csv("new_data.csv",sep = ",",header = TRUE)
View(data)
plot(data$Woody_DBH_cm)
lm(data$Woody_DBH_cm~data$Genus)
plot(lm(data$Woody_DBH_cm~data$Genus))
lm1 = lm(htcm~Woody_DBH_cm,data=rip)
with(rip,plot(htcm,Woody_DBH_cm))
x = seq(0,250)
lm1.pred.y<-predict(lm1,newdata=list(htcm=x))
lm1.pred.y<-predict(lm1,data=list(htcm=x))
lines(x,lm1.pred.y,col="blue",lwd=3)
lines(x,lm1.pred.y)
x
y
lm1.pred.y
x = seq(0,3932)
lm1.pred.y<-predict(lm1,newdata=list(htcm=x))
lm1.pred.y<-predict(lm1,data=list(htcm=x))
lines(x,lm1.pred.y,col="blue",lwd=3)
x
lm1.pred.y<-predict(lm1,data=list(htcm=x))
lines(x,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y
t(lm1.pred.y)
lines(x,t(lm1.pred.y),col="blue",lwd=3)
x
x = seq(0,3931)
lm1.pred.y<-predict(lm1,data=list(htcm=x))
lines(x,lm1.pred.y,col="blue",lwd=3)
lines(x,lm1.pred.y,col="blue",lwd=3)
plot(lines(x,lm1.pred.y,col="blue",lwd=3))
plot(lines(x,lm1.pred.y,col="blue",lwd=3))
plot(x,lm1.pred.y)
with(data,plot(Woody_DBH_CM,htcm))
with(data,plot(Woody_DBH_cm,htcm))
with(rip,plot(Woody_DBH_cm,htcm))
clear x
delete(x)
rm(x)
lm1.pred.y<-predict(lm.predp,data=list(Wood_DBH_cm=x))
lines(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y
data$Woody_DBH_cm
lm1.pred.y<-predict(lm.predp,data=list(Woody_DBH_cm=Woody_DBH_cm))
lm1.pred.y
rm(lm1.pred.y)
lm1.pred.y<-predict(lm.predp,newdata=data
)
lm1.pred.y<-predict(lm.predp,newdata=data)
lines(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y
?predict
?predict/lm
?predict.lm
lm1 = lm(htcm~Woody_DBH_cm,data=rip)
with(rip,plot(Woody_DBH_cm,htcm))
?predict
lm1.pred.y <- predict.lm(lm1,data)
lines(x,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y
lines(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y <- predict.lm(lm.predp,data)
lines(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y
lm1
lm.predp
lm1.pred.y<-predict(lm.predp,data$Woody_DBH_cm)
lm1.pred.y <- predict.lm(lm.predp,data)
lm1.pred.y <- predict.lm(lm1,data)
lines(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lines(data$Woody_DBH_cm,lm1.pred.y,col="red",lwd=3)
lm1.pred.y <- predict.lm(lm.predp,data)
lm1=lm(htcm~Woody_DBH_cm*Genus,data=rip)
lm1.pred.y <-predict(lm1,data)
lm1.pred.y
lines(data$Woody_DBH_cm,lm1.pred.y,col="red",lwd=3)
lines(data$Woody_DBH_cm*data$Genus,lm1.pred.y,col="red",lwd=3)
lines(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
with(rip,plot(Woody_DBH_cm,htcm))
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
with(rip,plot(Woody_DBH_cm,htcm))
lm1.pred.y <-predict(lm.predp,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
rm(lm1.pred.y)
lm1.pred.y <-predict(lm.predp,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y
xy = cbind(data$Longitude,data$Latitude)
# extract the values from the dem dataset
pvals = extract(precip,xy)
# Combine all new data into the dataframe
data$Precp_aug <- cbind(pvals,data)
View(data)
rm(data)
data <- read.csv("new_data.csv",sep = ",",header = TRUE)
xy = cbind(data$Longitude,data$Latitude)
# extract the values from the dem dataset
Precp_aug = extract(precip,xy)
cbind(Precp_aug,data)
data <- cbind(Precp_aug,data)
with(rip,plot(Woody_DBH_cm,htcm))
#lm1=lm(htcm~Woody_DBH_cm*Genus,data=rip)
lm1.pred.y <-predict(lm.predp,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm1.pred.y <-predict(lm1,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+rip$Elevation.values)
lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+as.numeric(rip$Elevation))
lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+rip$Elevation)
?melt
melt(rip,id=evals)
evals
melt(rip,id=evals)
melt(rip,evals)
evals
melt(rip,id=pvals)
aov.ancovaplot(lm.pred1)
predict.lm(lm.predp,data)
predict.lm(lm1,data)
plot(predict.lm(lm1,data))
lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+rip$Elevation)
lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
lm(htcm~Woody_DBH_cm*Genus+evals,data=rip)
lm.predp <- lm(htcm~Woody_DBH_cm*Genus+evals,data=rip)
predict.lm(lm.predp,data)
plot(predict.lm(lm.predp,data))
pvals
data$Precp_aug <-pvals
plot(predict.lm(lm.predp,data))
rip$Elevation <- evals
# x,y locations
xy = cbind(rip$Longitude,rip$Latitude)
# extract the values from the dem dataset
evals = extract(dem,xy)
# extract the values from the dem dataset
tvals = extract(tmean,xy)
# extract the values from the dem dataset
pvals = extract(precip,xy)
# Combine all new data into the dataframe
rip$Elevation <- evals
rip$Temp_aug <- tvals
rip$Precp_aug <- pvals
summary(rip$Temp_aug)
hist(rip$Temp_aug)
summary(rip$Elevation)
hist(rip$Elevation)
summary(rip$Precp_aug)
hist(rip$Precp_aug)
lm(t(rip$Temp_aug),t(rip$Precp_aug))
```
# Build Linear models for each predictor
lm.prede <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+evals)
lm.predp <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+pvals)
lm.predt <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+tvals)
lm.predl <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus+rip$Latitude)
lm.base <-lm(rip$htcm~rip$Woody_DBH_cm*rip$Genus)
esum <- summary.lm(lm.prede)
psum <- summary.lm(lm.predp) # Best model
tsum <- summary.lm(lm.predt)
lsum <- summary.lm(lm.predl)
bsum <- summary(lm.base)
```
lm.prede <-lm(htcm~Woody_DBH_cm*Genus+Elevation,data=rip)
lm.predp <-lm(htcm~Woody_DBH_cm*Genus+Precp_aug,data=rip)
lm.predt <-lm(htcm~Woody_DBH_cm*Genus+Temp_aug,data=rip)
lm.predl <-lm(htcm~Woody_DBH_cm*Genus+Latitude,data=rip)
lm.base <-lm(htcm~Woody_DBH_cm*Genus,data=rip)
esum <- summary.lm(lm.prede)
psum <- summary.lm(lm.predp) # Best model
tsum <- summary.lm(lm.predt)
lsum <- summary.lm(lm.predl)
bsum <- summary(lm.base)
# Load new data to compare to predicted model
data <- read.csv("new_data.csv",sep = ",",header = TRUE)
# x,y locations
xy = cbind(data$Longitude,data$Latitude)
# extract the values from the dem dataset
Precp_aug = extract(precip,xy)
# Combine all new data into the dataframe
data$Precp_aug <- Precp_aug
with(rip,plot(Woody_DBH_cm,htcm))
#lm1=lm(htcm~Woody_DBH_cm*Genus,data=rip)
lm1.pred.y <-predict(lm1,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
with(rip,plot(Woody_DBH_cm,htcm))
#lm1=lm(htcm~Woody_DBH_cm*Genus,data=rip)
lm1.pred.y <-predict(lm.predp,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
with(rip,plot(Woody_DBH_cm,htcm))
#lm1=lm(htcm~Woody_DBH_cm*Genus,data=rip)
lm1.pred.y <-predict(lm.predp,data)
points(data$Woody_DBH_cm,lm1.pred.y,col="blue",lwd=3)
abline(lm.predp)
abline(lm.predp,col="red")
?abline
abline(lm.predp,col="red",b=0)
abline(lm.predp,col="red",b=0)
abline(lm.predp,col="red",b=0, a=0)
abline(lm.predp,col="red",b=0, a=0)
abline(lm.predp,col="red")
?pow
2^2
2^3
pow(2,3)
C = 705*(0.0000334750*data$Woody_DBH_cm^2.33631)*lm1.pred.y^0.74872
C
?sum
sum(C)
TV = sum(C) # Calculate the sum of the tree volume
TVpH = (TV/(100))*(10000/1)
TVpH
MgCpH = (TVpH*.6)*.50/6 # The density of wood is about 0.6 g/cm^3
MgCpH
MgCpH = (TVpH*.6)*.50/1e6 # The density of wood is about 0.6 g/cm^3
MgCpH
1e6
1e6/100000
1e6/1000000
The estimated Mg of C per hectare for the new site is approximately `{r}MgCpH`
library(rgdal)
library(HH)
library(reshape2)
library(stats)
library(raster)
# Exploratory data analysis
summary(rip$Temp_aug)
hist(rip$Temp_aug)
summary(rip$Elevation)
hist(rip$Elevation)
summary(rip$Precp_aug)
hist(rip$Precp_aug)
lm(t(rip$Temp_aug),t(rip$Precp_aug))
lm(rip$Temp_aug,rip$Precp_aug)
lm(rip$Temp_aug,rip$Precp_aug)
hist(rip$Precp_aug)
The estimated Mg of C per hectare for the new site is approximately `r MgCpH`
specify_decimal(.123,2)
7/8
TVpH*.6
TVpH*.6/10000
TV*.6
(TV*.6)^(7/8)
(TV*.6)^(7/8)*.5
(TV*.6)^(7/8)*.5/100
TVpH
TVpH^(7/8)
TVpH^(7/8)/10000
(TVpH/10000)^(7/8)
summary(rip$Temp_aug)
hist(rip$Temp_aug,breaks = 20)
summary(rip$Elevation)
hist(rip$Elevation,breaks = 20)
summary(rip$Precp_aug)
hist(rip$Precp_aug,breaks = 20)
hist(rip$Temp_aug,breaks = 20)
hist(rip$Temp_aug,breaks = 50)
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (Aug)")
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (Aug)",title="")
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (Aug)",title="His")
hist(rip$Temp_aug,breaks = 20,xlab="Temperature ($\deg$C)",main="HIst")
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (\deg C)",main="HIst")
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (C)",main="HIst")
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (C)",main="Histogram of August Temperature")
hist(rip$Precp_aug,breaks = 20,xlab="Precipitation (mm)",main="Histogram of Precipitation)
hist(rip$Precp_aug,breaks = 20,xlab="Precipitation (mm)",main="Histogram of Precipitation")
hist(rip$Precp_aug,breaks = 20,xlab="Precipitation (mm)",main="Histogram of Precipitation")
summary(rip$Temp_aug)
summary(rip$Elevation)
summary(rip$Precp_aug)
pairs(rip)
plot(rip)
summary(rip)
boxplot(rip$Temp_aug)
layout(matrix(c(1,1), 2, 1, bycol = TRUE))
hist(rip$Temp_aug,breaks = 20,xlab="Temperature (C)",main="Histogram of August Temperature")
boxplot(rip$Temp_aug)
?layout
layout(matrix(c(1,1,2,2), 2, 2, byrow = TRUE))
```{r, fig.width=9,fig.height=4.5}
plot(c(Elevation,Temp_aug,Precp_aug),data=rip)
plot(c(rip$Elevation,rip$Temp_aug,rip$Precp_aug))
pairs(c(rip$Elevation,rip$Temp_aug,rip$Precp_aug))
pairs(rip$Elevation,rip$Temp_aug,rip$Precp_aug)
pairs(cbind(rip$Elevation,rip$Temp_aug,rip$Precp_aug))
pairs(cbind(rip$Elevation,rip$Temp_aug,rip$Precp_aug)
eda <- cbind(rip$Elevation,rip$Temp_aug,rip$Precp_aug)
eda <- cbind(rip$Elevation,rip$Temp_aug,rip$Precp_aug)
pairs(eda)
eda <- (rip$Elevation,rip$Temp_aug,rip$Precp_aug)
View(eda)
eda <- data.frame(cbind(rip$Elevation,rip$Temp_aug,rip$Precp_aug))
eda <- data.frame(rip$Elevation,rip$Temp_aug,rip$Precp_aug)
pairs(eda)
eda <- data.frame(rip$Elevation,rip$Temp_aug,rip$Precp_aug,rip$Woody_DBH_cm,rip$htcm)
pairs(eda)
?text
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = ProjLoc$Longitude+1
ytext = ProjLoc$Latitude
ytext[1] = ytext[1]+.1
ytext[2] = ytext[2]-.2
ytext[3] = ytext[3]+.2
# Plot the ProjLoc over the DEM
points(ProjLoc$Longitude,ProjLoc$Latitude)
text(xtext,ytext,labels=ProjLoc$ProjCode,font=10)
text(xtext,ytext,labels=ProjLoc$ProjCode,font=5)
text(xtext,ytext,labels=ProjLoc$ProjCode,vfont=5)
gdal_grid = readGDAL("DEM.tif")
dem = raster(gdal_grid) #use data as a projected raster
plot(dem)
# Create a vector to aid in plotting text for ProjLoc$ProjCode
xtext = ProjLoc$Longitude+1
ytext = ProjLoc$Latitude
ytext[1] = ytext[1]+.1
ytext[2] = ytext[2]-.2
ytext[3] = ytext[3]+.2
# Plot the ProjLoc over the DEM
points(ProjLoc$Longitude,ProjLoc$Latitude)
text(xtext,ytext,labels=ProjLoc$ProjCode,cex=.8)
text(xtext,ytext,labels=ProjLoc$ProjCode,cex=.5)
View(ProjLoc)
psum <- summary.lm(lm.predp) # Best model
plot(psum)
psum
psum.Pr
psum$Pr
psum$Precp_aug
psum$Precp_aug.Pr
psum.Precp_aug$Pr
